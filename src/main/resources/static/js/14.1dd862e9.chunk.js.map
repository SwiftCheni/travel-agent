{"version":3,"sources":["user/style.js","user/component/myRoute.js"],"names":["LoginWrapper","styled","div","RegisterWrapper","TableWrapper","Expired","span","Revoke","EditWrapper","Title","h1","MyRoute","this","props","user","role","init","id","routeId","axios","get","then","res","info","data","msg","success","catch","error","console","log","columns","title","dataIndex","key","align","width","render","text","record","style","color","cursor","paddingRight","to","onClick","deleteRoute","bind","paddingLeft","dataSource","routes","bordered","React","Component","connect","state","myRoute","dispatch","agentId","getMyRouteAction"],"mappings":"y9CAEO,IAAMA,EAAeC,IAAOC,IAAV,KAOZC,EAAkBF,IAAOC,IAAV,KAOfE,EAAeH,IAAOC,IAAV,KAOZG,EAAUJ,IAAOK,KAAV,KASPC,EAASN,IAAOK,KAAV,KAQNE,EAAcP,IAAOC,IAAV,KAKXO,EAAQR,IAAOS,GAAV,M,+LCrCZC,E,4LAGqB,OAApBC,KAAKC,MAAMC,MAA0C,UAAzBF,KAAKC,MAAMC,KAAKC,MAC7CH,KAAKC,MAAMG,KAAKJ,KAAKC,MAAMC,KAAKG,M,kCAIxBC,GAAU,IAAD,OACnBC,IAAMC,IAAN,6BAAgCF,IAAWG,MAAK,SAAAC,GAC9C,IAAQC,KAAKD,EAAIE,KAAKC,KACnBH,EAAIE,KAAKE,SACV,EAAKb,MAAMG,KAAK,EAAKH,MAAMC,KAAKG,OAEjCU,OAAM,SAAAC,GACPC,QAAQC,IAAIF,GACZ,IAAQL,KAAK,qE,+BAIP,IAAD,OACDQ,EAAU,CACd,CACEC,MAAO,qBACPC,UAAW,OACXC,IAAK,OACLC,MAAO,UAET,CACEH,MAAO,eACPC,UAAW,SACXC,IAAK,SACLC,MAAO,UAET,CACEH,MAAO,6CACPC,UAAW,cACXC,IAAK,cACLC,MAAO,UAET,CACEH,MAAO,eACPE,IAAK,QACLD,UAAW,QACXE,MAAO,UAET,CACEH,MAAO,oDACPE,IAAK,aACLD,UAAW,aACXE,MAAO,UAET,CACEH,MAAO,eACPE,IAAK,OACLD,UAAW,OACXE,MAAO,SACPC,MAAO,KAET,CACEJ,MAAO,iCACPE,IAAK,SACLD,UAAW,SACXE,MAAO,UAET,CACEH,MAAO,6CACPE,IAAK,QACLD,UAAW,QACXE,MAAO,UAET,CACEH,MAAO,eACPE,IAAK,SACLC,MAAO,SACPC,MAAO,IACPC,OAAQ,SAACC,EAAMC,GAAP,OACN,kBAAC,WAAD,KACE,0BAAMC,MAAO,CAACC,MAAO,OAAQC,OAAQ,UAAWC,aAAc,SAC5D,kBAAC,IAAD,CAAMC,GAAE,gBAAWL,EAAOL,MAA1B,iBAFJ,IAKE,0BACEW,QAAS,EAAKC,YAAYC,KAAK,EAAMR,EAAOL,KAC5CM,MAAO,CAACC,MAAO,OAAQC,OAAQ,UAAWM,YAAa,SAFzD,oBAUR,OAA4B,OAApBpC,KAAKC,MAAMC,MAA0C,UAAzBF,KAAKC,MAAMC,KAAKC,KAAmB,kBAAC,IAAD,KACrE,uBACEgB,QAASA,EACTkB,WAAYrC,KAAKC,MAAMqC,OACvBC,UAAU,EACVnB,MAAO,kBAAM,wBAAIG,MAAM,UAAV,gCAEC,kBAAC,IAAD,CAAUS,GAAG,U,GAnGbQ,IAAMC,WAsHbC,uBAfS,SAACC,GACvB,MAAO,CACLL,OAAQK,EAAMC,QACd1C,KAAMyC,EAAMzC,SAIW,SAAC2C,GAC1B,MAAO,CACLzC,KADK,SACA0C,GACHD,EAASE,YAAiBD,QAKjBJ,CAA6C3C","file":"static/js/14.1dd862e9.chunk.js","sourcesContent":["import styled from \"styled-components\";\r\n\r\nexport const LoginWrapper = styled.div`\r\n  width: 370px;\r\n  margin: 50px auto 0;\r\n  padding: 50px 20px;\r\n  background-color: #fff;\r\n`;\r\n\r\nexport const RegisterWrapper = styled.div`\r\n  width: 400px;\r\n  margin: 30px auto 0;\r\n  padding: 20px 20px 50px;\r\n  background-color: #fff;\r\n`;\r\n\r\nexport const TableWrapper = styled.div`\r\n  width: 100%;\r\n  background-color: #fff;\r\n  padding: 15px;\r\n  border-radius: 8px;\r\n`;\r\n\r\nexport const Expired = styled.span`\r\n  cursor: pointer;\r\n  padding: 5px 10px;\r\n  border-radius: 5px;\r\n  background-color: #f5f5f5;\r\n  color: #c9c9c9;\r\n  border: 1px solid #c9c9c9;\r\n`;\r\n\r\nexport const Revoke = styled.span`\r\n  cursor: pointer;\r\n  padding: 6px 11px;\r\n  border-radius: 5px;\r\n  background-color: #26bcd5;\r\n  color: #fff;\r\n`;\r\n\r\nexport const EditWrapper = styled.div`\r\n  width: 400px;\r\n  margin: 0 auto;\r\n`;\r\n\r\nexport const Title = styled.h1`\r\n  font-size: 20px;\r\n  font-weight: bold;\r\n  color: #38f;\r\n  text-align: center;\r\n`;\r\n","import React, { Fragment } from \"react\";\r\nimport axios from \"axios\";\r\nimport { connect } from \"react-redux\";\r\nimport { Link, Redirect } from \"react-router-dom\";\r\nimport { Table, message } from \"antd\";\r\nimport { getMyRouteAction } from \"../../store/action\";\r\nimport { TableWrapper } from \"../style\";\r\n\r\nclass MyRoute extends React.Component {\r\n\r\n  componentDidMount() {\r\n    if(this.props.user !== null && this.props.user.role === \"agent\") {\r\n      this.props.init(this.props.user.id);\r\n    }\r\n  }\r\n\r\n  deleteRoute(routeId) {\r\n    axios.get(`/route/delRoute?id=${routeId}`).then(res => {\r\n      message.info(res.data.msg);\r\n      if(res.data.success) {\r\n        this.props.init(this.props.user.id);\r\n      }\r\n    }).catch(error => {\r\n      console.log(error);\r\n      message.info(\"发生异常，请稍后再试\");\r\n    });\r\n  }\r\n\r\n  render() {\r\n    const columns = [\r\n      {\r\n        title: '线路名',\r\n        dataIndex: 'name',\r\n        key: 'name',\r\n        align: 'center'\r\n      },\r\n      {\r\n        title: '航班',\r\n        dataIndex: 'flight',\r\n        key: 'flight',\r\n        align: 'center'\r\n      },\r\n      {\r\n        title: '航班价格（元）',\r\n        dataIndex: 'flightPrice',\r\n        key: 'flightPrice',\r\n        align: 'center'\r\n      },\r\n      {\r\n        title: '酒店',\r\n        key: 'hotel',\r\n        dataIndex: 'hotel',\r\n        align: 'center'\r\n      },\r\n      {\r\n        title: '酒店价格（元/天）',\r\n        key: 'hotelPrice',\r\n        dataIndex: 'hotelPrice',\r\n        align: 'center'\r\n      },\r\n      {\r\n        title: '时间',\r\n        key: 'time',\r\n        dataIndex: 'time',\r\n        align: 'center',\r\n        width: 150\r\n      },\r\n      {\r\n        title: '时长（天）',\r\n        key: 'period',\r\n        dataIndex: 'period',\r\n        align: 'center'\r\n      },\r\n      {\r\n        title: '其他费用（元）',\r\n        key: 'other',\r\n        dataIndex: 'other',\r\n        align: 'center'\r\n      },\r\n      {\r\n        title: '操作',\r\n        key: 'action',\r\n        align: 'center',\r\n        width: 120,\r\n        render: (text, record) => (\r\n          <Fragment>\r\n            <span style={{color: \"#38f\", cursor: \"pointer\", paddingRight: \"10px\"}}>\r\n              <Link to={`/edit/${record.key}`}>修改</Link>\r\n            </span>\r\n            |\r\n            <span\r\n              onClick={this.deleteRoute.bind(this, record.key)}\r\n              style={{color: \"#38f\", cursor: \"pointer\", paddingLeft: \"10px\"}}\r\n            >\r\n              删除\r\n            </span>\r\n          </Fragment>\r\n        ),\r\n      },\r\n    ];\r\n    return (this.props.user !== null && this.props.user.role === \"agent\" ? <TableWrapper>\r\n      <Table\r\n        columns={columns}\r\n        dataSource={this.props.routes}\r\n        bordered={true}\r\n        title={() => <h1 align=\"center\">我的路线</h1>}\r\n      />\r\n    </TableWrapper> : <Redirect to=\"/\" />);\r\n  }\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n  return {\r\n    routes: state.myRoute,\r\n    user: state.user\r\n  }\r\n};\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n  return {\r\n    init(agentId) {\r\n      dispatch(getMyRouteAction(agentId));\r\n    }\r\n  }\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(MyRoute);\r\n"],"sourceRoot":""}